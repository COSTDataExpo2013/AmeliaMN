{
    "contents" : "#' Generate a vega axis specification\n#' \n#' @param type The type of axis. Either x or y.\n#' @param scale The name of the scale backing the axis component. Defaults to \n#'   the scale type - you will need to specify if you want (e.g.) a scale\n#'   for a secondary y-axis.\n#' @param orient The orientation of the axis. One of top, bottom, left or right. \n#'   The orientation can be used to further specialize the axis type (e.g., a y \n#'   axis oriented for the right edge of the chart) - defaults to bottom for\n#'   x axes, and left for y axes.\n#' @param title A title for the axis (none by default).\n#' @param title_offset The offset (in pixels) from the axis at which to place \n#'   the title.\n#' @param format The formatting pattern for axis labels. Vega uses D3's format \n#'   pattern: \\url{https://github.com/mbostock/d3/wiki/Formatting}\n#' @param ticky A desired number of ticks. The resulting number may be different  \n#'   so that values are \"nice\" (multiples of 2, 5, 10) and lie within the \n#'   underlying scale's range.\n#' @param values Explicitly set the visible axis tick values.\n#' @param subdivide If provided, sets the number of minor ticks between major \n#'   ticks (the value 9 results in decimal subdivision).\n#' @param tick_padding The padding, in pixels, between ticks and text labels.\n#' @param tick_size_major,tick_size_minor,tick_size_end \n#'   The size, in pixels, of major, minor and end ticks.\n#' @param offset The offset, in pixels, by which to displace the axis from the \n#'   edge of the enclosing group or data rectangle.\n#' @param layer A string indicating if the axis (and any gridlines) should be \n#'   placed above or below the data marks. One of \"front\" or \"back\" (default).\n#' @param grid A flag indicating if gridlines should be created in addition to \n#'   ticks.\n#' @param properties Optional mark property definitions for custom axis styling. \n#'   Should be a named list (ticks, majorTicks, minorTicks, labels and axis) of\n#'   \\code{\\link{props}}.\n#' @export\n#' @examples\n#' axis(\"x\")\n#' axis(\"x\", properties = list(ticks = props(stroke = \"red\")))\naxis <- function(type, scale = type, orient = NULL, title = NULL, \n                 title_offset = 0, format = NULL, ticks = NULL, \n                 values = NULL, subdivide = NULL, tick_padding = NULL, \n                 tick_size_major = NULL, tick_size_minor = tick_size_major, \n                 tick_size_end = tick_size_major, offset = NULL,\n                 layer = \"back\", grid = TRUE, properties = list()) {\n  \n  assert_that(type %in% c(\"x\", \"y\"))\n  assert_that(is.string(scale))\n  \n  if (is.null(orient)) orient <- c(x = \"bottom\", y = \"left\")[type]\n  orient <- match.arg(orient, c(\"top\", \"right\", \"bottom\", \"left\"))\n  \n  assert_that(is.null(title) || is.string(title)) \n#   assert_that(is.number(title_offset))\n  \n  layer <- match.arg(layer, c(\"front\", \"back\"))\n  assert_that(is.flag(grid))\n  \n  structure(compact(list(\n      type = type, scale = scale, orient = orient, title = title, \n      title_offset = title_offset, format = format, ticks = ticks, \n      values = values, subdivide = subdivide, tick_padding = tick_padding, \n      tick_size_major = tick_size_major, tick_size_minor = tick_size_minor, \n      tick_size_end = tick_size_end, offset = offset, layer = layer,\n      grid = grid, properties = properties\n  )), class = \"vega_axis\")\n}\n\nadd_default_axes <- function(axes, scales) {\n  present <- vapply(axes, \"[[\", \"scale\", FUN.VALUE = character(1))\n\n  missing <- setdiff(intersect(names(scales), c(\"x\", \"y\")), present)\n  \n  for (scale in missing) {\n    axes[[scale]] <- axis(scale)\n  }\n    \n  unname(axes)\n}\n\n",
    "created" : 1375490413003.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3450849398",
    "id" : "DC302BF3",
    "lastKnownWriteTime" : 1375386276,
    "path" : "~/gigvis/R/axis.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}