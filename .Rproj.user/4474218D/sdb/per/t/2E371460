{
    "contents" : "library(gigvis)\nlibrary(shiny)\n\n# Basic dynamic example\nmtc1 <- reactive({\n  invalidateLater(2000, NULL);\n  mtcars[sample(nrow(mtcars), 10), ]\n})\ngigvis(mtc1, props(x ~ wt, y ~ mpg),\n  mark_symbol(),\n  dynamic = TRUE\n)\n\n# Rapidly changing dynamic example\ndf <- data.frame(x = runif(20), y = runif(20))\n# Basic dynamic example\nmtc1 <- reactive({\n  invalidateLater(20, NULL);\n  \n  df$x <<- df$x + runif(20, -0.05, 0.05)\n  df$y <<- df$y + runif(20, -0.05, 0.05)\n  df\n})\ngigvis(mtc1, props(x ~ x, y ~ y),\n  mark_symbol(),\n  dynamic = TRUE,\n  scales = scales(x = scale(\"x\", domain = c(0, 1)))\n)\n\n\n# Two separate data sets, equal in the tree\nmtc1 <- reactive({\n  invalidateLater(2000, NULL);\n  mtcars[sample(nrow(mtcars), 10), ]\n})\nmtc2 <- reactive({\n  invalidateLater(2000, NULL);\n  mtcars[sample(nrow(mtcars), 10), ]\n})\ngigvis(data = NULL, props = props(x ~ wt, y ~ mpg),\n  node(\n    data = mtc1,\n    mark_symbol(props(stroke = \"black\", fill = \"black\"))\n  ),\n  node(\n    data = mtc2,\n    mark_symbol(props(fill = \"red\", size = 40))\n  ),\n  dynamic = TRUE\n)\n\n# With a transform\nmtc1 <- reactive({\n  invalidateLater(2000, NULL);\n  mtcars[sample(nrow(mtcars), 10), ]\n})\ngigvis(mtc1, props(x ~ wt, y ~ mpg),\n  mark_symbol(),\n  node(\n    data = transform_smooth(method = \"lm\"),\n    mark_line(props(stroke = \"red\"))\n  ),\n  dynamic = TRUE\n)\n",
    "created" : 1375488481367.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3587497802",
    "id" : "2E371460",
    "lastKnownWriteTime" : 1375386276,
    "path" : "~/gigvis/demo/dynamic.r",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}